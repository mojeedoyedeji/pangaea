{"version":3,"sources":["logo.svg","history.js","styles/global.js","constants/cart.js","actions/cart.js","constants/index.js","screens/default/Cart.js","actions/index.js","constants/product.js","screens/default/Products.js","actions/product.js","screens/default/Main.js","styles/theme.js","styles/colors.js","styles/alerts.js","components/page/Notify.js","App.js","reportWebVitals.js","reducers/product.js","reducers/cart.js","reducers/index.js","store/index.js","index.js"],"names":["createBrowserHistory","globalStyles","makeStyles","theme","root","flexGrow","width","minHeight","position","top","bottom","left","right","background","paddingBottom","backdrop","zIndex","drawer","color","buttonText","fontFamily","textTransform","header","subheader","fontSize","avatarLarge","height","marginBottom","borderWidth","borderColor","SET_CART","setCart","payload","type","INITIALIZE","FIX_CURRENCY","GET_CURRENCY","gql","mainStyles","card","marginTop","Main","dispatch","useDispatch","data","useQuery","useState","useSelector","state","main","currency","setCurrency","products","cart","currencies","__type","enumValues","useEffect","lists","cartItems","j","length","product","filter","item","id","console","log","element","find","newProduct","quantity","total","price","updateCart","style","padding","Grid","container","direction","TextField","onChange","event","target","value","label","select","map","MenuItem","name","Typography","Item","Summary","props","classes","Card","CardContent","justify","alignItems","md","title","IconButton","onClick","removeItem","spacing","incrementItem","variant","Math","max","decrementItem","getSymbolFromCurrency","Avatar","src","image_url","Divider","Number","getTotal","Button","FETCH_PRODUCT","useStyles","media","img","display","maxWidth","maxHeight","GET_PRODUCTS","variables","sm","xs","elevation","className","align","gutterBottom","component","CardActions","cartItem","push","addToCart","drawerWidth","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","justifyContent","content","contentShift","useTheme","React","open","setOpen","useHistory","CssBaseline","clsx","Drawer","anchor","paper","THEME","createMuiTheme","typography","palette","primary","alertStyles","success","backgroundColor","borderRadius","warning","error","successText","warningText","errorText","notify","handleClose","reason","Snackbar","message","autoHideDuration","onClose","Alert","severity","status","App","loading","user","history","Backdrop","CircularProgress","exact","path","Default","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","Object","assign","page","rootReducer","combineReducers","loggedIn","productReducer","cartReducer","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","applyMiddleware","thunk","subscribe","throttle","stringify","setItem","e","saveState","getState","client","ApolloClient","uri","cache","InMemoryCache","query","result","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.daa8afd9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const globalStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n      width:'100%',\n      minHeight:'110vh',\n      position:\"relative\", top: 0, bottom: 0, left: 0, right: 0,\n      background: \"#F8F6FB\",\n      paddingBottom:40\n    },\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n    buttonText:{\n      fontFamily: \"Sen\",\n      textTransform: \"none\"\n    },\n    header:{\n      fontFamily: \"Poppins\",\n      textTransform: \"none\"\n    },\n    subheader:{\n      fontFamily:\"Poppins\",\n      textTransform:\"none\",\n      fontSize:25,\n    },\n    avatarLarge:{\n      width: 100,\n      height: 100,\n      marginBottom: -50,\n      borderWidth:5,\n      borderColor:\"#2B2D42\",\n    }\n}));\n","export const SET_CART = \"SET_CART\";","import {SET_CART} from '../constants/cart';\n  \n  \nexport function setCart(payload){\n  return { type: SET_CART, payload }\n}\n  \n  \n  \n  ","export const INITIALIZE = \"INITIALIZE\";\nexport const FIX_CURRENCY = \"FIX_CURRENCY\";\nexport const SWITCH_VIEW = \"SWITCH_VIEW\";\nexport const CLEAR_NOTIFY = \"CLEAR_NOTIFY\";","import React, {useState, useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\n\n\nimport { gql, useQuery, useMutation } from '@apollo/client';\nimport {setCart} from '../../actions/cart';\nimport {fixCurrency} from '../../actions/index';\nimport getSymbolFromCurrency from 'currency-symbol-map';\n\n\nconst GET_CURRENCY = gql`\n  query {\n    __type(name:\"Currency\"){\n    name\n    enumValues{\n      name\n    }\n  }\n}\n`\n\nconst GET_PRODUCTS = gql`\n  query Products($currency: Currency){\n    products{\n    id\n    title\n    image_url\n    price(currency: $currency)\n  }\n}\n`\n\n\n\nconst mainStyles = {\n    card:{\n        marginTop:10\n    }\n}\nexport default function Main(){\n    const dispatch = useDispatch();\n    const {data}  = useQuery(GET_CURRENCY);\n    const [currency, setCurrency] = useState(useSelector(state=> state.main.currency));\n    const products = useSelector(state => state.products.products);\n    const cart = useSelector(state => state.cart.cart);\n    var currencies=[];\n\n    if(data){\n        currencies = data.__type.enumValues;\n    }\n\n    useEffect(() => {\n        updateCart();\n    }, [products]); \n\n    function updateCart(){\n        var lists = cart;\n        var cartItems = cart;\n        for(var j = 0; j < lists.length; j++){\n           var product = lists[j]; \n           cartItems = cartItems.filter(item => item.id !== product.id);\n           console.log(cartItems.length)\n           var element = products.find(item => item.id === product.id);\n           var newProduct = {...element, quantity:product.quantity, total: element.price*product.quantity}\n           cartItems = [...cartItems, newProduct];\n        }\n        dispatch(setCart(cartItems))\n    }\n\n    const handleCurrencyChange = (event) => {\n        setCurrency(event.target.value);\n        dispatch(fixCurrency(event.target.value));\n    }\n\n    return(\n        <div style={{padding:10}}>\n          <Grid container direction=\"row\">\n          <TextField id=\"select\" style={{width:\"30%\"}} \n           onChange={handleCurrencyChange}\n              label=\"Currency\" value={currency} select>\n                {currencies.map((item) => (\n                     <MenuItem value={item.name}> {item.name} </MenuItem>\n                ))}\n                </TextField>\n          </Grid>\n          <div style={{marginTop:20}}>\n              {cart.length === 0 &&\n                  <Grid container direction=\"row\">\n                   <Typography>\n                  No items in this cart\n                  </Typography>\n                  </Grid>\n                 }\n              {cart.map((item) => (\n                   <Item data={item} />\n              ))}\n         </div>\n          <Summary />\n        </div>\n    )\n}\n\n\nfunction Item(props){\n    const cart = useSelector(state => state.cart.cart);\n    const currency = useSelector(state => state.main.currency);\n    const dispatch = useDispatch()\n    const classes = mainStyles;\n\n    function removeItem(product){\n        var cartItems = cart.filter(item => item.id != product.id)\n        dispatch(setCart(cartItems))\n    }\n\n    function incrementItem(product){\n        var element =  cart.map(item => \n            item.id === product.id\n            ? {...item, quantity : item.quantity+1, \n                total: (item.quantity+1)*item.price} \n            : item)\n        dispatch(setCart(element))\n    }\n\n    function decrementItem(product){\n        var element =  cart.map(item => \n            item.id === product.id\n            ? {...item, quantity : Math.max(item.quantity-1,1),\n                total: Math.max(item.quantity-1, 1)*item.price} \n            : item)\n        dispatch(setCart(element))\n    }\n\n    return(\n            <Card style={classes.card}>\n                <CardContent>\n                    <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\n                        <Grid item md={10}>\n                            <Typography>{props.data.title} </Typography>\n                        </Grid>\n                        <Grid item md={1}>\n                            <IconButton onClick={() => removeItem(props.data)}><CloseIcon /></IconButton>\n                        </Grid>\n                    </Grid>\n\n                    <Grid container spacing={1} direction=\"row\" justify=\"space-between\">\n                        <Grid item md={4}>\n                            <Grid spacing={1} container direction=\"row\" alignItems=\"center\">\n                                <Grid item>\n                                    <IconButton onClick={() => incrementItem(props.data)}> <AddIcon/></IconButton>\n                                </Grid>\n                                <Grid item>\n                                    <Typography variant=\"body1\"> {props.data.quantity}</Typography>\n                                </Grid>\n                                <Grid item>\n                                    <IconButton onClick={() => decrementItem(props.data)}> <RemoveIcon/></IconButton>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item md={1}>\n                        <Typography variant=\"h6\"> {getSymbolFromCurrency(currency)}{props.data.total} </Typography>\n                        </Grid>\n                        <Grid item md={3}>\n                            <Avatar src={props.data.image_url} variant=\"square\" />\n                        </Grid>\n                        \n                    </Grid>\n                </CardContent>\n            </Card>\n    )\n}\n\nfunction Summary(){\n    const cart = useSelector(state => state.cart.cart);\n    const currency = useSelector(state => state.main.currency);\n\n     const  getTotal = () => {\n     var total = 0;\n     for(var j = 0; j< cart.length; j++){\n         total = total + Number(cart[j].total)\n     }\n     return total\n    }\n    return(\n        <div style={{marginTop:100}}>\n            <Divider />\n\n            <div style={{marginTop:20}}>\n            <Typography variant=\"h6\"> Sub total: {getSymbolFromCurrency(currency)} {getTotal()}</Typography>\n            </div>\n\n            <div style={{marginTop:40}}>\n            <Button color=\"primary\" style={{width:'100%'}} variant=\"contained\">\n                <Typography variant=\"h6\" style={{textTransform:\"none\"}}> \n                    Proceed to Checkout\n                </Typography>\n            </Button>\n            </div>\n        </div>\n    )\n}","import {FIX_CURRENCY, SWITCH_VIEW, CLEAR_NOTIFY} from '../constants/index';\n  \n  \nexport function fixCurrency(payload){\n  return { type: FIX_CURRENCY, payload }\n}\n  \nexport function switchView(payload){\n    return { type: SWITCH_VIEW, payload }\n}\n\nexport function clearNotify(payload){\n    return { type: CLEAR_NOTIFY, payload }\n}\n","export const SET_PRODUCT = \"SET_PRODUCT\";\nexport const FETCH_PRODUCT = \"FETCH_PRODUCT\";","import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography'\nimport { resultKeyNameFromField } from '@apollo/client/utilities';\n\nimport { gql, useQuery } from '@apollo/client';\n\nimport {fetchProduct} from '../../actions/product';\nimport {setCart} from '../../actions/cart';\nimport getSymbolFromCurrency from 'currency-symbol-map';\n\nconst useStyles = makeStyles({\n    card: {\n      height:280,\n      background: \"#F8F6FB\",\n      position: 'relative'\n    },\n    media: {\n      height:240,\n      width:120\n    },\n    img:{\n      display: 'block',\n      maxWidth:'100%',\n      maxHeight:120,\n      width: 'auto',\n      height: 'auto'\n    }\n  });\n\nconst GET_PRODUCTS = gql`\n  query Products($currency: Currency){\n    products{\n    id\n    title\n    image_url\n    price(currency: $currency)\n  }\n}\n`\n\n\n\n\nexport default function Main(){\n  const currency = useSelector(state => state.main.currency);\n  const {data}  = useQuery(GET_PRODUCTS, {variables:{currency}});\n  const products = useSelector(state => state.products.products);\n  const cart = useSelector(state => state.cart.cart);\n\n  \n  const dispatch = useDispatch();\n\n\n  if(data){\n    dispatch(fetchProduct(data.products))\n    //updateCart()\n  }\n\n  function updateCart(){\n    for(var j = 0; j < cart.length; j++){\n       var product = cart[j];\n       let element = products.find(item => item.id === product.id);\n       var cartItems = cart.filter(item => item.id != product.id);\n       product = {...product, price:element.price, total: element.price*product.quantity}\n       cartItems = [...cartItems, product];\n       dispatch(setCart(cartItems))\n    }\n   }\n\n\n\n    return(\n        <div>\n            <Grid container direction=\"row\" spacing={2}>\n                {products.map((item) => (\n                    <Grid item md={4} sm={6} xs={12}>\n                      <Item data={item} />\n                    </Grid>\n                ))}\n            </Grid>\n        </div>\n    )\n}\n\n\nfunction Item(props){\n        const classes = useStyles();\n        const dispatch = useDispatch();\n        const cart = useSelector(state => state.cart.cart);\n        const currency = useSelector(state => state.main.currency);\n\n        function addToCart(product){\n          let element = cart.find(item => item.id === product.id);\n          if(element){\n            var cartItems = cart.filter(item => item.id != element.id)\n            var cartItem = {...element, \n              quantity: element.quantity + 1, \n              total: (element.quantity+1)*element.price}\n            cartItems.push(cartItem);\n            dispatch(setCart(cartItems))\n          }else{\n            var cartItem = {...product, quantity:1, total: product.price}\n            var cartItems = [...cart, cartItem];\n            console.log(cartItems)\n            dispatch(setCart(cartItems))\n          }\n          //const data = cart.map(item => item.id = product.id);\n        }\n\n\n        \n        return (\n          <Card elevation={0}  className={classes.card}>\n             \n              \n              <CardContent >\n            \n              <Grid container direction=\"row\" justify=\"center\" style={{marginTop:10}}>\n              <Grid item md={4}>\n              <img className={classes.img} src={props.data.image_url} />\n              </Grid>\n              </Grid>\n\n              \n              <Typography style={{marginTop:10}} align=\"center\" gutterBottom variant=\"h5\" component=\"h2\">\n                  {props.data.title}\n              </Typography>\n              <Typography style={{marginTop:10}} align=\"center\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    From {getSymbolFromCurrency(currency)} {props.data.price}\n              </Typography>\n\n             \n             \n              </CardContent>\n\n              <CardActions style={{position:'absolute', bottom:0, width:'100%'}}>\n              <Grid container direction=\"row\" justify=\"center\">\n              <Button onClick={() => addToCart(props.data)} variant=\"contained\" color=\"primary\">\n               <Typography variant=\"h6\" style={{textTransform:\"none\"}}>\n                  Add to Cart \n                </Typography>\n              </Button>\n              </Grid>\n              </CardActions>\n              \n\n           \n\n          \n          </Card>\n    )\n}","import {SET_PRODUCT, FETCH_PRODUCT} from '../constants/product';\n  \n  \n  export function setProduct(payload){\n    return { type: SET_PRODUCT, payload }\n  }\n  \n  \n  export function fetchProduct(payload){\n    return { type: FETCH_PRODUCT, payload }\n  }\n  \n  \n  ","import React from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {useHistory} from 'react-router-dom';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Cart from './Cart';\nimport Products from './Products';\nimport {switchView} from \"../../actions\";\nimport { globalStyles } from '../../styles/global';\n\n\n\nconst drawerWidth = 480;\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: 0,\n  },\n}));\n\nexport default function Main(){\n    const classes = useStyles();\n    const styles = globalStyles()\n    const theme = useTheme();\n    const dispatch = useDispatch();\n    const [open, setOpen] = React.useState(true);\n    const pageIndex = useSelector(state => state.main.content);\n    const history = useHistory();\n  \n    const handleDrawerOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleDrawerClose = () => {\n      setOpen(false);\n    };\n\n    const handleSwitch = (index) => {\n        dispatch(switchView(index))\n    }\n\n    const handleLogout = () => {\n      localStorage.clear();\n      history.push(\"/\")\n    }\n    return(\n        <div className={classes.root}>\n        <CssBaseline />\n        <main\n          className={clsx(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n\n           \n           \n\n          <div className={classes.drawerHeader} />\n          <Grid container direction=\"row\" justify=\"flex-end\" \n            style={{marginTop:10, marginBottom:30}}>\n              <Button onClick={() => setOpen(true)}> <Typography> View Cart </Typography> </Button>\n            </Grid>\n          <Products />\n          </main>\n          <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"right\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n\n          <div className={classes.drawerHeader}>\n              <Grid container direction=\"row\" alignItems=\"center\">\n                  <Grid item md={2}>\n                  <IconButton onClick={handleDrawerClose}>\n                    {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                  </IconButton>\n                  </Grid>\n                  <Grid item md={3}>\n                      <Typography variant=\"h6\"> My Cart</Typography>\n                  </Grid>\n              </Grid>\n          </div>\n         \n           \n         <Cart />\n        </Drawer>\n          \n       \n\n        \n         \n      \n        \n       \n      </div>\n    )\n}\n","import {createMuiTheme} from '@material-ui/core/styles';\n\nimport {colors} from './colors';\n\nexport const THEME = createMuiTheme({\n   typography: {\n    \"fontFamily\": \"\\\"Sen\\\", sans-serif\",\n    \"fontSize\": 12,\n    \"fontWeightLight\": 300,\n    \"fontWeightRegular\": 400,\n    \"fontWeightMedium\": 500,\n    \"fontWeightBold\": 700,\n  },\n  palette: {\n   primary: {\n     main:colors.primary\n   },\n },\n});\n","export const colors = {\n    primary: \"#04773b\",\n    green: '#2b9720',\n    red: \"#df2935\",\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const alertStyles = makeStyles({\n    success: {\n      backgroundColor: '#D8F0D1',\n      borderRadius: 3,\n      padding: 10,\n    },\n    warning:{\n      backgroundColor:'#FFDCAD',\n      borderRadius: 3,\n      padding: 10,\n    },\n    error:{\n      backgroundColor: \"#FDD8DE\",\n      borderRadius: 3,\n      padding: 10,\n    },\n    successText:{\n      color: '#59B93C',\n      fontFamily:\"Roboto\"\n    },\n    warningText:{\n      color: '#E07F00',\n      fontFamily:\"Roboto\"\n    },\n    errorText:{\n      color: '#D50B2D',\n      fontFamily:\"Roboto\"\n    }\n});\n","import React from 'react';\nimport {useDispatch} from 'react-redux';\n\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport { useSelector } from \"react-redux\";\nimport {alertStyles} from \"../../styles/alerts\";\n\n\n\nimport {clearNotify} from \"../../actions\";\n\n\nexport default function Main(){\n  const [open, setOpen] = React.useState(true);\n\n  const dispatch = useDispatch();\n  const notify = useSelector(state => state.main.notify);\n  const styles = alertStyles();\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n    dispatch(clearNotify())\n  };\n      return(\n        <Snackbar open={notify.message}  autoHideDuration={6000}  onClose={handleClose}>  \n           <Alert onClose={handleClose} severity={notify.status}>\n           {notify.message}\n          </Alert>\n        </Snackbar>\n      )\n\n}\n","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport history from './history';\nimport './App.css';\n\nimport { useDispatch, useSelector, useStore } from \"react-redux\";\nimport { Backdrop, CircularProgress} from '@material-ui/core';\nimport {BrowserRouter as Router, \n  Switch, Route, Link, Redirect, useLocation} from \"react-router-dom\";\nimport {MuiThemeProvider} from '@material-ui/core/styles';\n\nimport {globalStyles} from './styles/global.js';\n//Account\nimport Default from './screens/default/Main';\nimport {THEME} from './styles/theme.js'\n\n\nimport Notify from './components/page/Notify';\n\n\n\n\nfunction App() {\n  const loading = useSelector(state => state.main.loading);\n  const user = useSelector(state => state.user);\n  const classes = globalStyles();\n  return (\n    <MuiThemeProvider theme={THEME}>\n     <Router history={history}>\n         <div>\n         <Backdrop className={classes.backdrop} open={loading}>\n           <CircularProgress color=\"inherit\" />\n         </Backdrop>\n         <Notify />\n         <Switch>\n           <Route exact path=\"/\" component={Default} />\n         </Switch>\n         </div>\n       </Router>\n     </MuiThemeProvider>\n  );\n}\n\n\n\n\nconst PrivateRoute = ({component: Component, user,  ...rest}) => (\n  <Route\n    {...rest}\n    exact\n    render={props => user.loggedIn\n    ? (<Component {...props} />) : (<Redirect to={{pathname: \"/in\"}} />)}\n  />)\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {FETCH_PRODUCT} from  \"../constants/product\";\n\n\nconst initialState = {\n    products:[],\n    product:{\n      \n    }\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type){\n    case FETCH_PRODUCT:\n        return Object.assign({}, state, {\n           products: action.payload,\n        });\n  }\n  return state;\n}\n\nexport default reducer;\n","import {SET_CART} from  \"../constants/cart\";\n\n\nconst initialState = {\n    cart:[],\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type){\n    case SET_CART:\n        return Object.assign({}, state, {\n           cart: action.payload,\n        });\n  }\n  return state;\n}\n\nexport default reducer;\n","import {combineReducers} from \"redux\";\nimport {INITIALIZE, FIX_CURRENCY} from  \"../constants/index\";\n\nimport productReducer from './product';\nimport cartReducer from './cart';\n\n\nconst initialState = {\n  loading: false,\n  notify:{\n    message: \"\",\n    status: \"\",\n  },\n  page: 2,\n  currency: 'NGN'\n};\n\nfunction mainReducer(state = initialState, action) {\n  switch (action.type){\n    case INITIALIZE:\n      return Object.assign({}, state, {\n         loading: false,\n         loggedIn: false,\n       });\n    case FIX_CURRENCY:\n      return Object.assign({}, state, {\n        currency: action.payload\n      });\n  }\n  return state;\n}\n\nconst rootReducer = combineReducers({\n    main: mainReducer,\n    products: productReducer,\n    cart: cartReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"../reducers/index\";\nimport throttle from 'lodash/throttle';\nimport thunk from 'redux-thunk';\n\n\nfunction loadState(){\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\n\nfunction saveState (state) {\n  try {\n    const serializedState = JSON.stringify(state);\n      localStorage.setItem('state', serializedState);\n  } catch (e) {\n    console.log(e)\n  }\n};\n\n\nconst persistedState = loadState();\n\nconst store = createStore(\n  rootReducer,\n  persistedState,\n  applyMiddleware(thunk),\n);\n\nstore.subscribe(throttle(() => {\n  saveState({\n    main: store.getState().main,\n    products: store.getState().products,\n    cart: store.getState().cart\n  });\n}, 1000));\n\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store/index';\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\n\nimport { gql } from '@apollo/client';\n\nconst client = new ApolloClient({\n  uri: 'https://pangaea-interviews.now.sh/api/graphql',\n  cache: new InMemoryCache()\n});\n\n\nclient\n  .query({\n    query: gql`\n      query {\n        products{\n          id\n          title\n          image_url\n        }\n      }\n    `\n  })\n  .then(result => {});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <Provider store={store}>\n      <App />\n      </Provider>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}